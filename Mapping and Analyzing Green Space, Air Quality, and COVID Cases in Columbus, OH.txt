# Load libraries
library(sf)
library(tidyverse)
library(tmap)
library(tidycensus)
library(tigris)
library(rgeos)
library(rgdal)
library(raster)
library(exactextractr)
library(corrplot)
library(rmapshaper)
library(ncdf4)

# Set working directory
setwd('YOUR DIRECTORY HERE')

# Census API Key
census_api_key('YOUR API KEY HERE')

# Download zip code data
zips <- get_acs(geography = 'zcta', 
                year = 2019,
                state = 'OH',
                survey = 'acs5',
                output = 'wide',
                geometry = T,
                variables = c(tpop = 'B01003_001',
                              tpopr = 'B03002_001', 
                              nhwhite = 'B03002_003',
                              nhblk = 'B03002_004',
                              nhasn = 'B03002_006',
                              hisp = 'B03002_012',
                              medinc = 'B19013_001'))

# Calculate percent race/ethnicity and clean up data
zips <- zips %>%
        mutate(pnhwhite = nhwhiteE/tpoprE,
               pnhasn = nhasnE/tpoprE, 
               pnhblk = nhblkE/tpoprE,
               phisp = hispE/tpoprE) %>%
        rename(tpop = tpopE, medinc = medincE) %>%
        dplyr::select(c(GEOID,tpop, pnhwhite, pnhasn, pnhblk, phisp, medinc))

# Get Columbus city boundary
ohio <- places(state = 39) %>%
               filter(GEOID == '3918000')
cbusbound <- filter(ohio, NAME == 'Columbus')

# Project data to same CRS
zips <- st_as_sf(zips)
zips <- st_transform(zips,crs = 'EPSG:26917')
cbusbound <- st_transform(cbusbound,crs = 'EPSG:26917')

# Clip zip codes with Columbus boundary
cbuszip <- zips[cbusbound,]
cbuszip <- st_transform(cbuszip, crs = 'EPSG:26917')

# Plot clipped zip codes
qtm(cbuszip)

# Read air quality data
pm25 <- raster('data/V5GL02.HybridPM25.NorthAmerica.201910-201910.nc')
st_crs(pm25)
pm25 <- projectRaster(pm25, crs='+proj=utm +zone=17 +datum=WGS84 +units=m +no_defs')

# Plot air quality data
plot(pm25)

# Import landsat data and convert to raster brick
landsat <- stack('data/landsat8_composit.tif')
landsat_br <- brick(landsat)

# Extract red and near infrared bands
lsbr4 <- landsat_br[[4]]
lsbr5 <- landsat_br[[5]]

# Calculate NDVI
ndvi <- (lsbr5 - lsbr4) / (lsbr5 + lsbr4)

# Plot NDVI
plot(ndvi)
hist(ndvi)

# Clip zip codes with Columbus boundary
cbuszip <- zips[cbusbound,]
cbuszip <- st_transform(cbuszip, crs = 'EPSG:26917')
qtm(cbuszip)

# Read air quality data
pm25 <- raster('data\\V5GL02.HybridPM25.NorthAmerica.201910-201910.nc')
st_crs(pm25)
pm25 <- projectRaster(pm25, crs='+proj=utm +zone=17 +datum=WGS84 +units=m +no_defs')
plot(pm25)

# Calculate NDVI
landsat <- stack('data//landsat8_composit.tif')
landsat_br <- brick(landsat)
lsbr4 <- landsat_br[[4]]
lsbr5 <- landsat_br[[5]]
ndvi <- (lsbr5-lsbr4)/(lsbr5+lsbr4)
plot(ndvi)
hist(ndvi)

# Calculate green area
greenwat <- ndvi >= 0.5
plot(ndvi)

# Extract cells from polygons
greenzip <- data.frame(exact_extract(greenwat, cbuszip, 'sum'))
greenzip <- rename(greenzip, greenzip = exact_extract.greenwat..cbuszip...sum..)
pmzip <- data.frame(exact_extract(pm25, cbuszip, 'mean'))
pmzip <- rename(pmzip, pmzip = exact_extract.pm25..cbuszip...mean..)
greenpm <- cbind(pmzip, greenzip)
greenpm <- cbind(greenpm, cbuszip)

# Read COVID data
cdata <- read_csv('C:\\Users\\tayqu\\My Drive\\School\\01 Current Semester\\R\\04 Assignments\\assignment 6\\COVIDSummaryDataZIP.csv')
cdata <- dplyr::select(cdata, c('Case Count - Cumulative', 'Case Count Per 100K - Cumulative', 'Zip Code'))
cdata <- rename(cdata, cases = 'Case Count - Cumulative')
cdata <- rename(cdata, cases100k = 'Case Count Per 100K - Cumulative')
cdata <- rename(cdata, GEOID = 'Zip Code')

# Join and convert column cases
covid <- left_join(greenpm, cdata, by = "GEOID")
covid[c("cases", "cases100k")] <- sapply(covid[c("cases", "cases100k")], as.numeric)

# Convert to Simple Feature format
covid <- st_as_sf(covid)

# Plotting and exploring the data
cases_map <- tm_shape(covid) +
             tm_fill(col = "cases100k", style = "jenks", palette = "Reds", border.alpha = 0, title = "Cases per 100k") +
             tm_scale_bar(position = c("right", "bottom")) +
             tm_layout(main.title = "COVID Cases (Columbus, OH)",
                       main.title.size = 1, frame = FALSE,
                       legend.outside = TRUE, legend.outside.position = "left") +
             tm_compass(position = c("right", "top"))

green_map <- tm_shape(covid) +
            tm_fill(col = "greenzip", style = "jenks", palette = "Greens", border.alpha = 0, title = "Total Green Space") +
            tm_layout(main.title = "Green Space",
                      main.title.size = 1, frame = FALSE,
                      legend.outside = TRUE, legend.outside.position = "left")

air_map <- tm_shape(covid) +
           tm_fill(col = "pmzip", style = "jenks", palette = "Blues", border.alpha = 0, title = "PM2.5 Levels") +
           tm_layout(main.title = "Air Quality",
                     main.title.size = 1, frame = FALSE,
                     legend.outside = TRUE, legend.outside.position = "left")

inc_map <- tm_shape(covid) +
           tm_fill(col = "medinc", style = "jenks", palette = "Oranges", border.alpha = 0, title = "Median Income ($)") +
           tm_layout(main.title = "Median Income",
                     main.title.size = 1, frame = FALSE,
                     legend.outside = TRUE, legend.outside.position = "left")

tmap_arrange(cases_map, green_map, air_map, inc_map)

# Correlation matrix of the variables
corr_matrix <- cor(var)

# Plotting the correlation matrix
library(corrplot)
corrplot(corr_matrix)

# Plotting the relationships between greenzip, pmzip, and covid cases with % black population
par(mfrow = c(2,2))

plot(covid$greenzip, covid$pnhblk,
     xlab = "Green Space",
     ylab = '% Black')

plot(covid$greenzip, covid$pnhwhite,
     xlab = 'Green Space',
     ylab = '% White')

plot(covid$cases100k, covid$pnhblk,
     xlab = 'COVID/100k',
     ylab = '% Black')

plot(covid$pmzip, covid$pnhblk,
     xlab = "Air Quality",
     ylab = "% Black")
